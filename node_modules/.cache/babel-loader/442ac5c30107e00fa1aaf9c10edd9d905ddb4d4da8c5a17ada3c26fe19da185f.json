{"ast":null,"code":"var _jsxFileName = \"E:\\\\quiz-app\\\\src\\\\pages\\\\Quiz.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useCallback } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport QuestionCard from \"../components/QuestionCard\";\nimport ProgressBar from \"../components/ProgressBar\";\nimport Timer from \"../components/Timer\";\nimport { shuffle, decodeHtml } from \"../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HS_KEY = \"quiz_highscores_v1\";\nfunction saveHighScore(entry) {\n  const list = JSON.parse(localStorage.getItem(HS_KEY) || \"[]\");\n  list.push(entry);\n  localStorage.setItem(HS_KEY, JSON.stringify(list.slice(-50)));\n}\nexport default function Quiz() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    search\n  } = useLocation();\n  const params = new URLSearchParams(search);\n  const amount = Math.max(5, Math.min(10, Number(params.get(\"amount\") || 10)));\n  const useApi = params.get(\"useApi\") !== \"false\";\n  const difficulty = params.get(\"difficulty\") || \"mixed\";\n  const category = params.get(\"category\") || \"any\";\n  const [loading, setLoading] = useState(true);\n  const [questions, setQuestions] = useState([]);\n  const [index, setIndex] = useState(0);\n  const [selectedIndex, setSelectedIndex] = useState(null);\n  const [lockedSelections, setLockedSelections] = useState([]); // store selected idxs\n  const [timeLeft, setTimeLeft] = useState(30);\n  const timerRef = useRef(null);\n  const startTimeRef = useRef(Date.now());\n\n  // load questions\n  useEffect(() => {\n    let active = true;\n    async function load() {\n      setLoading(true);\n      try {\n        if (useApi) {\n          const apiParams = new URLSearchParams();\n          apiParams.set(\"amount\", String(amount));\n          apiParams.set(\"type\", \"multiple\");\n          if ([\"easy\", \"medium\", \"hard\"].includes(difficulty)) apiParams.set(\"difficulty\", difficulty);\n          if (category !== \"any\") apiParams.set(\"category\", category);\n          const res = await fetch(`https://opentdb.com/api.php?${apiParams.toString()}`);\n          const data = await res.json();\n          if (!active) return;\n          if (data && Array.isArray(data.results) && data.results.length >= 1 && data.response_code === 0) {\n            const normalized = data.results.map((r, idx) => {\n              const answers = shuffle([r.correct_answer, ...r.incorrect_answers]).map(decodeHtml);\n              const correctIndex = answers.findIndex(a => a === decodeHtml(r.correct_answer));\n              return {\n                id: `api-${idx}-${Date.now()}`,\n                category: r.category,\n                difficulty: r.difficulty,\n                question: decodeHtml(r.question),\n                options: answers,\n                correctIndex\n              };\n            }).slice(0, amount);\n            setQuestions(normalized);\n          } else {\n            // fallback to local\n            const resLocal = await fetch(\"/questions.json\");\n            const local = await resLocal.json();\n            setQuestions(shuffle(local).slice(0, amount));\n          }\n        } else {\n          const resLocal = await fetch(\"/questions.json\");\n          const local = await resLocal.json();\n          setQuestions(shuffle(local).slice(0, amount));\n        }\n      } catch (e) {\n        // network error -> fallback\n        try {\n          const resLocal = await fetch(\"/questions.json\");\n          const local = await resLocal.json();\n          setQuestions(shuffle(local).slice(0, amount));\n        } catch (err) {\n          setQuestions([]);\n        }\n      } finally {\n        if (active) {\n          setLoading(false);\n          setIndex(0);\n          setSelectedIndex(null);\n          setLockedSelections([]);\n          setTimeLeft(30);\n          startTimeRef.current = Date.now();\n        }\n      }\n    }\n    load();\n    return () => {\n      active = false;\n    };\n  }, [amount, useApi, difficulty, category]);\n\n  // timer logic for current question\n  useEffect(() => {\n    if (questions.length === 0) return;\n    clearInterval(timerRef.current);\n    setTimeLeft(30);\n    timerRef.current = setInterval(() => {\n      setTimeLeft(t => {\n        if (t <= 1) {\n          clearInterval(timerRef.current);\n          // auto lock (if no selection it's recorded as -1)\n          handleLock();\n          return 0;\n        }\n        return t - 1;\n      });\n    }, 1000);\n    return () => clearInterval(timerRef.current);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [index, questions.length]);\n\n  // keyboard nav\n  useEffect(() => {\n    function onKey(e) {\n      if (!questions.length) return;\n      const current = questions[index];\n      if (!current) return;\n      if (e.key === \"ArrowUp\" || e.key === \"ArrowDown\") {\n        e.preventDefault();\n        setSelectedIndex(prev => {\n          const max = current.options.length - 1;\n          if (prev === null) return 0;\n          if (e.key === \"ArrowUp\") return Math.max(0, prev - 1);\n          return Math.min(max, prev + 1);\n        });\n      } else if (e.key === \"Enter\") {\n        e.preventDefault();\n        if (selectedIndex !== null) handleLock();\n      }\n    }\n    window.addEventListener(\"keydown\", onKey);\n    return () => window.removeEventListener(\"keydown\", onKey);\n  }, [questions, index, selectedIndex]); // depends on selected\n\n  const progress = Math.round(lockedSelections.length / questions.length * 100);\n  const handleLock = useCallback(() => {\n    if (!questions[index]) return;\n    // record (allow -1 => no selection)\n    const sel = selectedIndex === null ? -1 : selectedIndex;\n    const newLocked = [...lockedSelections, sel];\n    setLockedSelections(newLocked);\n    // move next or finish\n    if (index + 1 < questions.length) {\n      setIndex(index + 1);\n      setSelectedIndex(null);\n    } else {\n      // compute score\n      const correct = newLocked.reduce((acc, s, i) => {\n        return acc + (s === questions[i].correctIndex ? 1 : 0);\n      }, 0);\n      const timeMs = Date.now() - startTimeRef.current;\n      // persist highscore\n      saveHighScore({\n        date: new Date().toISOString(),\n        score: correct,\n        total: questions.length,\n        timeMs,\n        settings: {\n          amount: questions.length,\n          difficulty,\n          useApi,\n          category\n        }\n      });\n      // navigate to results with state\n      navigate(\"/results\", {\n        state: {\n          questions,\n          lockedSelections: newLocked,\n          score: correct,\n          total: questions.length,\n          timeMs\n        }\n      });\n    }\n  }, [index, selectedIndex, lockedSelections, questions, navigate, difficulty, useApi, category, amount]);\n  const handlePrev = () => {\n    if (index > 0) {\n      setIndex(index - 1);\n      setSelectedIndex(null);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: \"Loading questions\\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 12\n    }, this);\n  }\n  if (!questions.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [\"No questions available. Try going back to \", /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"link\",\n        href: \"/\",\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 76\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 12\n    }, this);\n  }\n  const current = questions[index];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        marginBottom: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"small\",\n        children: [\"Question \", index + 1, \" of \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"small\",\n        children: [\"Time left: \", /*#__PURE__*/_jsxDEV(Timer, {\n          secondsLeft: timeLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 43\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n      value: progress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 12\n      },\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(QuestionCard, {\n        question: current,\n        selectedIndex: selectedIndex,\n        onSelect: setSelectedIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline\",\n            onClick: handlePrev,\n            disabled: index === 0,\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline\",\n            onClick: () => navigate(\"/\"),\n            children: \"Quit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: handleLock,\n            disabled: selectedIndex === null && timeLeft > 0,\n            children: [\" \", index + 1 === questions.length ? \"Finish\" : \"Next\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer-note\",\n      children: [\"Keyboard navigation: \", /*#__PURE__*/_jsxDEV(\"kbd\", {\n        children: \"\\u2191\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 30\n      }, this), \"/\", /*#__PURE__*/_jsxDEV(\"kbd\", {\n        children: \"\\u2193\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 43\n      }, this), \" to select, \", /*#__PURE__*/_jsxDEV(\"kbd\", {\n        children: \"Enter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 67\n      }, this), \" to lock.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n}\n_s(Quiz, \"YektG+gjVlaqdI54SK67+7GyaxE=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","useNavigate","useLocation","QuestionCard","ProgressBar","Timer","shuffle","decodeHtml","jsxDEV","_jsxDEV","HS_KEY","saveHighScore","entry","list","JSON","parse","localStorage","getItem","push","setItem","stringify","slice","Quiz","_s","navigate","search","params","URLSearchParams","amount","Math","max","min","Number","get","useApi","difficulty","category","loading","setLoading","questions","setQuestions","index","setIndex","selectedIndex","setSelectedIndex","lockedSelections","setLockedSelections","timeLeft","setTimeLeft","timerRef","startTimeRef","Date","now","active","load","apiParams","set","String","includes","res","fetch","toString","data","json","Array","isArray","results","length","response_code","normalized","map","r","idx","answers","correct_answer","incorrect_answers","correctIndex","findIndex","a","id","question","options","resLocal","local","e","err","current","clearInterval","setInterval","t","handleLock","onKey","key","preventDefault","prev","window","addEventListener","removeEventListener","progress","round","sel","newLocked","correct","reduce","acc","s","i","timeMs","date","toISOString","score","total","settings","state","handlePrev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","style","display","justifyContent","marginBottom","secondsLeft","value","marginTop","onSelect","onClick","disabled","_c","$RefreshReg$"],"sources":["E:/quiz-app/src/pages/Quiz.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport QuestionCard from \"../components/QuestionCard\";\nimport ProgressBar from \"../components/ProgressBar\";\nimport Timer from \"../components/Timer\";\nimport { shuffle, decodeHtml } from \"../utils\";\n\nconst HS_KEY = \"quiz_highscores_v1\";\n\nfunction saveHighScore(entry) {\n  const list = JSON.parse(localStorage.getItem(HS_KEY) || \"[]\");\n  list.push(entry);\n  localStorage.setItem(HS_KEY, JSON.stringify(list.slice(-50)));\n}\n\nexport default function Quiz() {\n  const navigate = useNavigate();\n  const { search } = useLocation();\n  const params = new URLSearchParams(search);\n\n  const amount = Math.max(5, Math.min(10, Number(params.get(\"amount\") || 10)));\n  const useApi = params.get(\"useApi\") !== \"false\";\n  const difficulty = params.get(\"difficulty\") || \"mixed\";\n  const category = params.get(\"category\") || \"any\";\n\n  const [loading, setLoading] = useState(true);\n  const [questions, setQuestions] = useState([]);\n  const [index, setIndex] = useState(0);\n  const [selectedIndex, setSelectedIndex] = useState(null);\n  const [lockedSelections, setLockedSelections] = useState([]); // store selected idxs\n  const [timeLeft, setTimeLeft] = useState(30);\n  const timerRef = useRef(null);\n  const startTimeRef = useRef(Date.now());\n\n  // load questions\n  useEffect(() => {\n    let active = true;\n    async function load() {\n      setLoading(true);\n      try {\n        if (useApi) {\n          const apiParams = new URLSearchParams();\n          apiParams.set(\"amount\", String(amount));\n          apiParams.set(\"type\", \"multiple\");\n          if ([\"easy\", \"medium\", \"hard\"].includes(difficulty)) apiParams.set(\"difficulty\", difficulty);\n          if (category !== \"any\") apiParams.set(\"category\", category);\n          const res = await fetch(`https://opentdb.com/api.php?${apiParams.toString()}`);\n          const data = await res.json();\n          if (!active) return;\n          if (data && Array.isArray(data.results) && data.results.length >= 1 && data.response_code === 0) {\n            const normalized = data.results.map((r, idx) => {\n              const answers = shuffle([r.correct_answer, ...r.incorrect_answers]).map(decodeHtml);\n              const correctIndex = answers.findIndex(a => a === decodeHtml(r.correct_answer));\n              return {\n                id: `api-${idx}-${Date.now()}`,\n                category: r.category,\n                difficulty: r.difficulty,\n                question: decodeHtml(r.question),\n                options: answers,\n                correctIndex\n              };\n            }).slice(0, amount);\n            setQuestions(normalized);\n          } else {\n            // fallback to local\n            const resLocal = await fetch(\"/questions.json\");\n            const local = await resLocal.json();\n            setQuestions(shuffle(local).slice(0, amount));\n          }\n        } else {\n          const resLocal = await fetch(\"/questions.json\");\n          const local = await resLocal.json();\n          setQuestions(shuffle(local).slice(0, amount));\n        }\n      } catch (e) {\n        // network error -> fallback\n        try {\n          const resLocal = await fetch(\"/questions.json\");\n          const local = await resLocal.json();\n          setQuestions(shuffle(local).slice(0, amount));\n        } catch (err) {\n          setQuestions([]);\n        }\n      } finally {\n        if (active) {\n          setLoading(false);\n          setIndex(0);\n          setSelectedIndex(null);\n          setLockedSelections([]);\n          setTimeLeft(30);\n          startTimeRef.current = Date.now();\n        }\n      }\n    }\n    load();\n    return () => { active = false; };\n  }, [amount, useApi, difficulty, category]);\n\n  // timer logic for current question\n  useEffect(() => {\n    if (questions.length === 0) return;\n    clearInterval(timerRef.current);\n    setTimeLeft(30);\n    timerRef.current = setInterval(() => {\n      setTimeLeft(t => {\n        if (t <= 1) {\n          clearInterval(timerRef.current);\n          // auto lock (if no selection it's recorded as -1)\n          handleLock();\n          return 0;\n        }\n        return t - 1;\n      });\n    }, 1000);\n    return () => clearInterval(timerRef.current);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [index, questions.length]);\n\n  // keyboard nav\n  useEffect(() => {\n    function onKey(e) {\n      if (!questions.length) return;\n      const current = questions[index];\n      if (!current) return;\n      if (e.key === \"ArrowUp\" || e.key === \"ArrowDown\") {\n        e.preventDefault();\n        setSelectedIndex(prev => {\n          const max = current.options.length - 1;\n          if (prev === null) return 0;\n          if (e.key === \"ArrowUp\") return Math.max(0, prev - 1);\n          return Math.min(max, prev + 1);\n        });\n      } else if (e.key === \"Enter\") {\n        e.preventDefault();\n        if (selectedIndex !== null) handleLock();\n      }\n    }\n    window.addEventListener(\"keydown\", onKey);\n    return () => window.removeEventListener(\"keydown\", onKey);\n  }, [questions, index, selectedIndex]); // depends on selected\n\n  const progress = Math.round(((lockedSelections.length) / questions.length) * 100);\n\n  const handleLock = useCallback(() => {\n    if (!questions[index]) return;\n    // record (allow -1 => no selection)\n    const sel = selectedIndex === null ? -1 : selectedIndex;\n    const newLocked = [...lockedSelections, sel];\n    setLockedSelections(newLocked);\n    // move next or finish\n    if (index + 1 < questions.length) {\n      setIndex(index + 1);\n      setSelectedIndex(null);\n    } else {\n      // compute score\n      const correct = newLocked.reduce((acc, s, i) => {\n        return acc + (s === questions[i].correctIndex ? 1 : 0);\n      }, 0);\n      const timeMs = Date.now() - startTimeRef.current;\n      // persist highscore\n      saveHighScore({ date: new Date().toISOString(), score: correct, total: questions.length, timeMs, settings: { amount: questions.length, difficulty, useApi, category } });\n      // navigate to results with state\n      navigate(\"/results\", { state: { questions, lockedSelections: newLocked, score: correct, total: questions.length, timeMs } });\n    }\n  }, [index, selectedIndex, lockedSelections, questions, navigate, difficulty, useApi, category, amount]);\n\n  const handlePrev = () => {\n    if (index > 0) {\n      setIndex(index - 1);\n      setSelectedIndex(null);\n    }\n  };\n\n  if (loading) {\n    return <div className=\"card\">Loading questions…</div>;\n  }\n\n  if (!questions.length) {\n    return <div className=\"card\">No questions available. Try going back to <a className=\"link\" href=\"/\">Start</a>.</div>;\n  }\n\n  const current = questions[index];\n\n  return (\n    <div>\n      <div style={{ display: \"flex\", justifyContent: \"space-between\", marginBottom: 8 }}>\n        <div className=\"small\">Question {index + 1} of {questions.length}</div>\n        <div className=\"small\">Time left: <Timer secondsLeft={timeLeft} /></div>\n      </div>\n\n      <ProgressBar value={progress} />\n\n      <div style={{ marginTop: 12 }} className=\"card\">\n        <QuestionCard question={current} selectedIndex={selectedIndex} onSelect={setSelectedIndex} />\n\n        <div className=\"controls\">\n          <div className=\"left\">\n            <button className=\"btn btn-outline\" onClick={handlePrev} disabled={index === 0}>Previous</button>\n            <button className=\"btn btn-outline\" onClick={() => navigate(\"/\")} >Quit</button>\n          </div>\n\n          <div>\n            <button className=\"btn btn-primary\" onClick={handleLock} disabled={selectedIndex === null && timeLeft > 0}> {index + 1 === questions.length ? \"Finish\" : \"Next\"} </button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"footer-note\">\n        Keyboard navigation: <kbd>↑</kbd>/<kbd>↓</kbd> to select, <kbd>Enter</kbd> to lock.\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}